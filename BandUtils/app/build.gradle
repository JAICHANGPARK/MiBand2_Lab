apply plugin: "com.android.application"
apply plugin: "findbugs"
apply plugin: "pmd"
apply plugin: 'realm-android'

def ABORT_ON_CHECK_FAILURE = false

tasks.withType(Test) {
    systemProperty "MiFirmwareDir", System.getProperty("MiFirmwareDir", null)
    systemProperty "logback.configurationFile", System.getProperty("user.dir", null) + "/app/src/main/assets/logback.xml"
    systemProperty "GB_LOGFILES_DIR", java.nio.file.Files.createTempDirectory("gblog").toString()
}

android {
//    compileOptions {
//        // for KitKat
//        sourceCompatibility JavaVersion.VERSION_1_7
//        targetCompatibility JavaVersion.VERSION_1_7
//    }
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId 'nodomain.knu2018.bandutils'
        minSdkVersion 19
        targetSdkVersion 27

        // Note: always bump BOTH versionCode and versionName!
        versionName "1.0.5"
        versionCode 2
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
    lintOptions {
        abortOnError ABORT_ON_CHECK_FAILURE
        lintConfig file("${project.rootDir}/config/lint/lint.xml")
// If true, generate an HTML report (with issue explanations, sourcecode, etc)
        htmlReport true
// Optional path to report (default will be lint-results.html in the builddir)
        htmlOutput file("$project.buildDir/reports/lint/lint.html")
    }
    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }
    productFlavors {
    }
}

pmd {
    toolVersion = "5.5.5"
}

dependencies {
    //    testImplementation "ch.qos.logback:logback-classic:1.1.3"
    //    testImplementation "ch.qos.logback:logback-core:1.1.3"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'org.robolectric:robolectric:3.6.1'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:gridlayout-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:palette-v7:27.1.1'
    implementation 'com.android.support:support-vector-drawable:27.1.1'
    implementation('com.github.tony19:logback-android-classic:1.1.1-6') {
        exclude group: "com.google.android", module: "android"
    }
    implementation 'org.slf4j:slf4j-api:1.7.12'
    implementation 'com.github.Freeyourgadget:MPAndroidChart:5e5bd6c1d3e95c515d4853647ae554e48ee1d593'
    implementation 'com.github.pfichtner:durationformatter:0.1.1'
    implementation 'de.cketti.library.changelog:ckchangelog:1.2.2'
    implementation 'net.e175.klaus:solarpositioning:0.0.9'
    // use pristine greendao instead of our custom version, since our custom jitpack-packaged
    // version contains way too much and our custom patches are in the generator only.
    implementation 'org.greenrobot:greendao:2.2.1'
    implementation 'org.apache.commons:commons-lang3:3.5'
    implementation 'org.cyanogenmod:platform.sdk:6.0'
    implementation 'com.hlab.fabrevealmenu:fab-reveal-menu:1.0.3'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.github.arcadefire:nice-spinner:1.3.1'
    //nice-spinner
    implementation 'com.xw.repo:bubbleseekbar:3.10-lite'
    // bubble seek bar
    implementation 'com.github.Kunzisoft:Android-SwitchDateTimePicker:1.9'
    //compile 'com.google.android.material:material:1.0.0-alpha1'
    implementation 'com.github.florent37:materialtextfield:1.0.7'
    implementation 'com.rengwuxian.materialedittext:library:2.1.4'
    implementation 'com.airbnb.android:lottie:2.5.4'
    implementation 'com.github.javiersantos:MaterialStyledDialogs:2.1'
    implementation 'us.feras.mdv:markdownview:1.1.0'
    implementation 'org.zeroturnaround:zt-zip:1.13'
    implementation 'com.github.ghost1372:Mzip-Android:0.4.0'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'id.zelory:compressor:2.1.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.wonderkiln:camerakit:0.13.1'
    implementation 'me.shaohui.advancedluban:library:1.3.5'
    implementation 'com.github.amanjeetsingh150:ImageZipper:1.3'
    implementation 'io.paperdb:paperdb:2.6'

    implementation 'com.github.bumptech.glide:glide:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'
    implementation 'com.github.zzz40500:AndroidSweetSheet:1.1.0'

    implementation 'tyrantgit:explosionfield:1.0.1'
    implementation 'com.github.pavel163:BifacialView:1.4.0'
    implementation project(':aFileChooser')

    implementation 'com.google.firebase:firebase-core:15.0.2'
    implementation 'com.google.firebase:firebase-config:15.0.2'

    implementation 'com.github.d-max:spots-dialog:0.7@aar' // Spot Dialog
    implementation 'com.github.jd-alexander:android-flat-button:v1.1' //fbutton

    implementation 'com.nightonke:wowoviewpager:2.0.0'

    //    implementation project(":DaoCore")

}



preBuild.dependsOn(":GBDaoGenerator:genSources")

gradle.beforeProject {
    preBuild.dependsOn(":GBDaoGenerator:genSources")
}

check.dependsOn "findbugs", "pmd", "lint"

task pmd(type: Pmd) {
    ruleSetFiles = files("${project.rootDir}/config/pmd/pmd-ruleset.xml")
    ignoreFailures = !ABORT_ON_CHECK_FAILURE
    ruleSets = [
            "java-android",
            "java-basic",
            "java-braces",
            "java-clone",
            "java-codesize",
            "java-controversial",
            "java-coupling",
            "java-design",
            "java-empty",
            "java-finalizers",
            "java-imports",
            "java-junit",
            "java-optimizations",
            "java-strictexception",
            "java-strings",
            "java-sunsecure",
            "java-typeresolution",
            "java-unnecessary",
            "java-unusedcode"
    ]

    source "src"
    include "**/*.java"
    exclude "**/gen/**"

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination "$project.buildDir/reports/pmd/pmd.xml"
        }
        html {
            destination "$project.buildDir/reports/pmd/pmd.html"
        }
    }
}

task findbugs(type: FindBugs) {
    ignoreFailures = !ABORT_ON_CHECK_FAILURE
    effort = "default"
    reportLevel = "medium"
    excludeFilter = new File("${project.rootDir}/config/findbugs/findbugs-filter.xml")
    classes = files("${project.rootDir}/app/build/intermediates/classes")
    source = fileTree("src/main/java/")
    classpath = files()
    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination "$project.buildDir/reports/findbugs/findbugs-output.xml"
        }
        html {
            destination "$project.buildDir/reports/findbugs/findbugs-output.html"
        }
    }
}

apply plugin: 'com.google.gms.google-services'
